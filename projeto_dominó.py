# -*- coding: utf-8 -*-
"""Projeto dominó.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PojQFKBYaEHzvXiitwp5m5APkQMigQt2
"""

from random import randint
from time import sleep

print("-="*14)
print('''Boas-Vindas ao jogo
PYTHON DOMINÓ''')
print("-="*14)
print("Misturando as peças")
sleep(2)
print("Distribuindo as peças")
sleep(2)
print("O jogo começa agora!!!")
sleep(2)
print("-="*14)
# Base
peças = list()
J1 = list()
J2 = list()
Trilha = list()
# Criar as 29 peças do dominó
for i in range(0, 7):
  for j in range(i, 7):
    peças.append([i, j])
# Dividir as peças
r = 0
for i in range(0, 7):
  num1 = randint(0, len(peças)-r)
  J1.append(peças[num1])
  peças.remove(peças[num1])
  r += 1
  num2 = randint(0, len(peças)-r)
  J2.append(peças[num2])
  peças.remove(peças[num2])
  r += 1

# Exibir as peças do jogador 1
print(f'Você possui {len(J1)} peças')
print('┌──────────────┐')
print('│  Suas peças  |')
print('|              |')
for i in range(0, len(J1)):
  print(f'│  {i}:  {J1[i]}  │')
print('└──────────────┘')

# Quantidade de peças do computador
print('-='*14)
print(f'O computador possui {len(J2)} peças')
print('-='*14)
print()

# Definir quem inicia a trilha
# Peças com prioridade
peças_início = [[i, i] for i in range(6, -1, -1)]

# Definir o turno
turno = None

# Quem tem a maior peça?
J1_p = list()
J2_p = list()
for i in range(7):
  for j in range(7):
    if J1[i] == peças_início[i]:
      J1_p.append(J1[j])
    elif J2[i] == peças_início[i]:
      J2_p.append(J2[j])
try:
  if (bool(J1_p) == True) and (bool(J2_p) == False):
    print(f'Você possui a maior peça: {J1_p[0]}')
    Trilha.append(J1_p[0])
    J1.remove(J1_p[0])
    turno = "J2"
  elif (bool(J2_p) == True) and (bool(J1_p) == False):
    print(f'O computador possui a maior peça: {J2_p[0]}')
    Trilha.append(J2_p[0])
    J2.remove(j2_p[0])
    turno = "J1"
  elif J1_p[0] > J2_p[0]:
    print(f'Você possui a maior peça: {J1_p[0]}')
    Trilha.append(J1_p[0])
    J1.remove(J1_p[0])
    turno = "J2"
  elif J2_p[0] > J1_p[0]:
    print(f'O computador possui a maior peça: {J2_p[0]}')
    Trilha.append(J2_p[0])
    J2.remove(j2_p[0])
    turno = "J1"
except:
  if (bool(J1_p) == False) and (bool(J2_p) == False):
    for i in range(0, 7):
      J1_p.append(J1[i][0] + J1[i][1])
      J2_p.append(J2[i][0] + J2[i][1])
    if max(J1_p) > max(J2_p):
      print(f'Você possui a maior peça: {J1[J1_p.index(max(J1_p))]}')
      Trilha.append(J1[J1_p.index(max(J1_p))])
      J1.remove(J1[J1_p.index(max(J1_p))])
      turno = "J2"
    elif max(J1_p) < max(J2_p):
      print(f'O computador possui a maior peça: {J2[J2_p.index(max(J2_p))]}')
      Trilha.append(J2[J2_p.index(max(J2_p))])
      J2.remove(J2[J2_p.index(max(J2_p))])
      turno = "J1"

# Compor a trilha
jogada_inicial = (str(Trilha[0]))

# Exibir a trilha
print()
print("-="*20)
print(jogada_inicial)
print("-="*20)

# Definir as jogadas do turno
jogada = None
lado = None

def jogar(turno, peças):
  Dominós = ""

  while True:
    # Turno do Jogador 1 (J1)
    if turno == "J1":
      # Exibir as peças do jogador
      print("Seu turno:")
      print(f'Você possui {len(J1)} peças')
      print('┌──────────────┐')
      print('│  Suas peças  |')
      print('|              |')
      for i in range(0, len(J1)):
        print(f'│  {i}:  {J1[i]}  │')
      print('└──────────────┘')

      # Iniciar a jogada
      def jogada():
        jogada = int(input("Insira a sua jogada: "))
        # Colocar a peça na trilha
        lado = (input("""
        Esquerda ou Direita ?
        E - Esquerda; D - Direita
        ladp: """)).upper()
        # Esquerda
        if lado == "E":
          Dominós = ""
          if J1[jogada][1] == Trilha[0][0]:
            Trilha.insert(0, J1[jogada])
            for i in range(0, len(Trilha)):
              Dominós += str(Trilha[i])
            J1.remove(J1[jogada])
            print("-="*20)
            print(Dominós)
            print("-="*20)
          elif J1[jogada][0] == Trilha[0][0]:
            J1[jogada][0], J1[jogada][1] = J1[jogada][1], J1[jogada][0]
            Trilha.insert(0, J1[jogada])
            for i in range(0, len(Trilha)):
              Dominós += str(Trilha[i])
            J1.remove(J1[jogada])
            print("-="*20)
            print(Dominós)
            print("-="*20)
        # Direita
        elif lado == "D":
          Dominós = ""
          if J1[jogada][0] == Trilha[len(Trilha)-1][1]:
            Trilha.append(J1[jogada])
            for i in range(0, len(Trilha)):
              Dominós += str(Trilha[i])
            J1.remove(J1[jogada])
            print("-="*20)
            print(Dominós)
            print("-="*20)
          elif J1[jogada][1] == Trilha[len(Trilha)-1][1]:
            J1[jogada][0], J1[jogada][1] = J1[jogada][1], J1[jogada][0]
            Trilha.append(J1[jogada])
            for i in range(0, len(Trilha)):
              Dominós += str(Trilha[i])
            J1.remove(J1[jogada])
            print("-="*20)
            print(Dominós)
            print("-="*20)

      # Verificar se possui peças
      # Se tiver peças o jogo continua normalmente
      # Ver no início da trilha
      if Trilha[0][0] in list(map(lambda i: i[0], J1)) or\
         Trilha[0][0] in list(map(lambda i: i[1], J1)):
        jogada()
      # ver o final da trilha
      elif Trilha[len(Trilha)-1][1] in list(map(lambda i: i[0], J1)) or\
           Trilha[len(Trilha)-1][1] in list(map(lambda i: i[1], J1)):
        jogada()
      # E se não tiver peças com valores correspondentes?
      else:
        if bool(peças):
          pegar = (input("""
          Deseja pegar peças?
          S - Sim; N - Não
          pegar: """)).upper()
          if pegar == "N":
            print("Você perdeu")
            break
          elif pegar == "S":
            num3 = randint(0, len(peças))
            J1.append(peças[num3])
            peças.remove(peças[num3])
            Dominós = ""
            if peças == 0:
              print("Você perdeu")
            for i in range(0, len(Trilha)):
              Dominós += str(Trilha[i])
            print("-="*20)
            print(Dominós)
            print("-="*20)
          else:
            break # E quem venceu?
        # Mudança de turno
        turno = "J1" if turno=="J2" else "J2"
    # Turno do computador
    elif turno == "J2":
      print("-="*20)
      print("Jogada do computador") # qual será a jogada do computador?
      print("-="*20)
      # Turno do computador
      turno = "J1" if turno=="J2" else "J2"

jogar(turno, peças)